export PATH="~/bin:/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:/usr/local/git/bin:/usr/local/bin/git:$PATH"
export PATH=$PATH:/Users/markmulder/sources
export PATH=$PATH:/Users/markmulder/dotfiles/zsh/functions
export MANPATH="/usr/local/man:/usr/local/mysql/man:/usr/local/git/man:$MANPATH"
export GOPATH="/Users/markmulder/sources/go:"

export LANGUAGE=en_US.UTF-8
export LANG=en_US.UTF-8
export LC_ALL=en_US.UTF-8

fpath=(~/.zsh/functions $fpath)

autoload -U ~/.zsh/functions/*(:t)

HISTFILE=~/.zsh_history
HISTSIZE=1000
SAVEHIST=1000

setopt NO_BG_NICE # don't nice background tasks
setopt NO_HUP
setopt NO_LIST_BEEP
setopt LOCAL_OPTIONS # allow functions to have local options
setopt LOCAL_TRAPS # allow functions to have local traps
setopt HIST_VERIFY
setopt EXTENDED_HISTORY # add timestamps to history
setopt PROMPT_SUBST
setopt CORRECT
setopt COMPLETE_IN_WORD

setopt APPEND_HISTORY # adds history
setopt HIST_IGNORE_ALL_DUPS  # don't record dupes in history
setopt HIST_REDUCE_BLANKS

zle -N newtab

bindkey '^[^[[D' backward-word
bindkey '^[^[[C' forward-word
bindkey '^[[5D' beginning-of-line
bindkey '^[[5C' end-of-line
bindkey '^[[3~' delete-char
bindkey '^[^N' newtab
bindkey '^?' backward-delete-char

# enable shift tab
bindkey '^[[Z' reverse-menu-complete

autoload colors zsh/terminfo
if [[ "$terminfo[colors]" -ge 8 ]]; then
  colors
fi
for color in RED GREEN YELLOW BLUE MAGENTA CYAN WHITE; do
  eval PR_$color='%{$terminfo[bold]$fg[${(L)color}]%}'
  eval PR_LIGHT_$color='%{$fg[${(L)color}]%}'
  (( count = $count + 1 ))
done

export RUBYLIB="lib:test:$RUBYLIB"

export PATH="$HOME/.rbenv/bin:$PATH"
eval "$(rbenv init -)"

# Prompt setup
autoload -U colors
colors

# Uses red color for exit status > 0
local symbol="%(?,%{$fg[green]%}∞%{$reset_color%},%{$fg[red]%}∞%{$reset_color%})"

PROMPT='%c ${symbol} %{$reset_color%}'
RPROMPT='%{$fg[green]%} $(~/.zsh/functions/git-cwd-info.sh) %{$reset_color%}'

autoload -U url-quote-magic
zle -N self-insert url-quote-magic

export CLICOLOR=1
export LSCOLORS=GxFxCxDxBxegedabagaced
